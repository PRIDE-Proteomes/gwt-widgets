<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:solr="http://www.springframework.org/schema/data/solr"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
                           http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context-3.1.xsd
                           http://www.springframework.org/schema/data/solr http://www.springframework.org/schema/data/solr/spring-solr-1.0.xsd
                           http://www.springframework.org/schema/data/jpa
                           http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

    <context:annotation-config />

    <tx:annotation-driven/>

    <!-- data source using place holder properties -->
    <bean id="proteomesDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${proteomes.jdbc.driver}"/>
        <property name="url" value="${proteomes.jdbc.url}"/>
        <property name="username" value="${proteomes.jdbc.user}"/>
        <property name="password" value="${proteomes.jdbc.password}"/>
    </bean>

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="proteomesDataSource"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="generateDdl" value="false"/>
                <property name="database" value="ORACLE"/>
                <property name="showSql" value="false"/>
            </bean>
        </property>
        <property name="jpaProperties"> <!-- needed for lazy loading, otherwise the session is not kept even if transactional: http://stackoverflow.com/questions/578433/how-to-solve-lazy-initialization-exception-using-jpa-and-hibernate-as-provider -->
            <props>
                <!-- However in Hibernate 4.1.8 and 4.1.9 there is a bug related to this feature https://hibernate.atlassian.net/browse/HHH-7971
                     hence we have to use 4.1.7 !
                -->
                <prop key="hibernate.enable_lazy_load_no_trans">true</prop>
            </props>
        </property>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
        <property name="jpaDialect">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect"/>
        </property>
    </bean>

    <jpa:repositories base-package="uk.ac.ebi.pride.proteomes.db.core.api"/>

    <bean id="proteomesSolrServer" class="org.apache.solr.client.solrj.impl.HttpSolrServer">
        <constructor-arg name="baseURL" value="${solr.server.proteomes.peptiform.core.url}" />
    </bean>


    <bean id="solrTemplate" class="org.springframework.data.solr.core.SolrTemplate">
        <constructor-arg name="solrServer" ref="proteomesSolrServer"/>
    </bean>


    <bean id="proteomesRepositoryFactory" class="uk.ac.ebi.pride.proteomes.index.repository.RepositoryFactory">
        <constructor-arg ref="solrTemplate"/>
    </bean>

    <bean id="indexService" class="uk.ac.ebi.pride.proteomes.index.service.ProteomesIndexService">
        <constructor-arg value="#{ proteomesRepositoryFactory.create() }"/>
    </bean>
    <bean id="searchService" class="uk.ac.ebi.pride.proteomes.index.service.ProteomesSearchService">
        <constructor-arg value="#{ proteomesRepositoryFactory.create() }"/>
    </bean>

    <!-- property files -->
    <context:property-placeholder location="classpath:props/*.properties" ignore-unresolvable="true"/>

</beans>
